ARG CUDA_IMAGE="12.5.0-devel-ubuntu22.04"
FROM nvidia/cuda:${CUDA_IMAGE} AS builder

RUN apt-get update \
    && apt-get install -y python3 python3-pip git ca-certificates ninja-build \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

ENV CUDA_DOCKER_ARCH=all
ENV GGML_CUDA=1
ENV CMAKE_ARGS="-DGGML_CUDA=on"

COPY requirements-base.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r requirements-base.txt llama_cpp_python

ARG CUDA_IMAGE="12.5.0-runtime-ubuntu22.04"
FROM nvidia/cuda:${CUDA_IMAGE}

RUN apt-get update \
    && apt-get install -y python3 python3-pip libgomp1 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

COPY --from=builder /app/wheels /wheels
RUN pip install --no-cache-dir /wheels/* && rm -rf /wheels

# ENV LD_LIBRARY_PATH="/usr/local/cuda-12.5/targets/x86_64-linux/lib/:${LD_LIBRARY_PATH}"
# ENV LD_LIBRARY_PATH="/usr/local/lib/python${PYTHON_VERSION}/dist-packages/nvidia/nvjitlink/lib:$LD_LIBRARY_PATH"

WORKDIR /app
COPY app.py .

ENV GRADIO_SERVER_NAME=0.0.0.0
EXPOSE 7860

CMD ["python3", "app.py"]